(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},m=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(c,".").concat(m)]||u[m]||b[m]||a;return n?o.a.createElement(d,i(i({ref:t},s),{},{components:n})):o.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var s=2;s<a;s++)c[s]=n[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},94:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return i})),n.d(t,"default",(function(){return s}));var r=n(3),o=(n(0),n(104));const a={title:"Operators"},c={unversionedId:"concepts/operators",id:"concepts/operators",isDocsHomePage:!1,title:"Operators",description:"Operators are Kubernetes-specific pods that provide a custom",source:"@site/docs/concepts/operators.md",slug:"/concepts/operators",permalink:"/k8s-notes/concepts/operators",editUrl:"https://github.com/jasonk/k8s-notes/edit/master/docs/concepts/operators.md",version:"current",sidebar:"docs",previous:{title:"Control Plane",permalink:"/k8s-notes/concepts/control-plane"},next:{title:"Taints and Tolerations",permalink:"/k8s-notes/concepts/tainting"}},i=[],p={rightToc:i};function s({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Operators are Kubernetes-specific pods that provide a custom\ncontroller that can configure and manage other deployments\nautomatically."),Object(o.b)("p",null,"Examples of things an operator can do:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Install and provide sane initial configuration and sizing for your\ndeployment, according to the specs of your Kubernetes cluster."),Object(o.b)("li",{parentName:"ul"},"Perform live reloading of deployments and pods to accommodate for\nany user-requested parameter modification (hot config reloading)."),Object(o.b)("li",{parentName:"ul"},"Automatically scale up or down according to performance metrics."),Object(o.b)("li",{parentName:"ul"},"Perform backups, integrity checks or any other maintenance task."),Object(o.b)("li",{parentName:"ul"},"Basically, anything that can be expressed as code by a human admin\ncan be automated inside a Kubernetes Operator.")),Object(o.b)("p",null,"Kubernetes Operators make extensive use of Custom Resource Definitions\n(or CRDs) to create context-specific entities and objects that will be\naccessed like any other Kubernetes API resource. For example, the\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://github.com/prometheus-operator/prometheus-operator"}),"Prometheus Operator")," provides CRDs for ",Object(o.b)("inlineCode",{parentName:"p"},"Prometheus"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"AlertManager"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ThanosRuler"),", ",Object(o.b)("inlineCode",{parentName:"p"},"ServiceMonitor"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Probe"),",\n",Object(o.b)("inlineCode",{parentName:"p"},"PrometheusRule"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"AlertManagerConfig"),"."))}s.isMDXComponent=!0}}]);