(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=o.a.createContext({}),l=function(e){var t=o.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):p(p({},t),e)),n},u=function(e){var t=l(e.components);return o.a.createElement(i.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,i=c(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,m=u["".concat(s,".").concat(d)]||u[d]||b[d]||a;return n?o.a.createElement(m,p(p({ref:t},i),{},{components:n})):o.a.createElement(m,p({ref:t},i))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=d;var p={};for(var c in t)hasOwnProperty.call(t,c)&&(p[c]=t[c]);p.originalType=e,p.mdxType="string"==typeof e?e:r,s[1]=p;for(var i=2;i<a;i++)s[i]=n[i];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return i}));var r=n(3),o=(n(0),n(104));const a={title:"Operators and OpenEBS"},s={unversionedId:"setup/operators-and-openebs",id:"setup/operators-and-openebs",isDocsHomePage:!1,title:"Operators and OpenEBS",description:"A Kubernetes Operator is a software extension that uses [Custom",source:"@site/docs/setup/operators-and-openebs.md",slug:"/setup/operators-and-openebs",permalink:"/k8s-notes/setup/operators-and-openebs",editUrl:"https://github.com/jasonk/k8s-notes/edit/master/docs/setup/operators-and-openebs.md",version:"current",sidebar:"docs",previous:{title:"Helm",permalink:"/k8s-notes/setup/helm"},next:{title:"Jsonnet and Prometheus",permalink:"/k8s-notes/setup/jsonnet-and-prometheus"}},p=[],c={rightToc:p};function i({components:e,...t}){return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/"}),"Kubernetes Operator")," is a software extension that uses ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"}),"Custom\nResource Definitions")," to manage an application and it's\ncomponents."),Object(o.b)("p",null,"We're going to use an operatror to install ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://openebs.io/"}),"OpenEBS"),", one of\nthe most popular storage management engines for Kubernetes."),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"OpenEBS builds on Kubernetes to enable Stateful applications to\neasily access Dynamic Local PVs or Replicated PVs. By using the\nContainer Attached Storage pattern users report lower costs, easier\nmanagement, and more control for their teams.")),Object(o.b)("p",null,"In this tutorial we're going to install a \"lite\" version of OpenEBS\nthat supports only the Local PV HostPath StorageClass.  This is the\nsimplest StorageClass as it doesn't require dedicated disk devices,\nyou can just give it a directory to create files in and it will use\nthat to create virtual disks."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"kubectl apply -f https://openebs.github.io/charts/openebs-operator-lite.yaml\nkubectl apply -f https://openebs.github.io/charts/openebs-lite-sc.yaml\n")),Object(o.b)("p",null,"The default install of this lite version creates a StorageClass called\n",Object(o.b)("inlineCode",{parentName:"p"},"openebs-hostpath")," that uses the directory ",Object(o.b)("inlineCode",{parentName:"p"},"/var/openebs/local")," for\nit's base path.  If you want to change any of this, you can find\ninstructions at\n",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://docs.openebs.io/docs/next/uglocalpv-hostpath.html#create-storageclass"}),"https://docs.openebs.io/docs/next/uglocalpv-hostpath.html#create-storageclass")),Object(o.b)("p",null,"Check to make sure the localpv provisioner is running:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-sh"}),"kubectl get pods -n openebs -l openebs.io/component-name=openebs-localpv-provisioner\n")),Object(o.b)("p",null,"Now you can use ",Object(o.b)("inlineCode",{parentName:"p"},"storageClassName: openebs-hostpath")," when creating\npods with a ",Object(o.b)("inlineCode",{parentName:"p"},"PersistentVolumeClaim")," (more on that later)."))}i.isMDXComponent=!0}}]);